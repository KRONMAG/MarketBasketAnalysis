### YamlMime:ManagedReference
items:
- uid: MarketBasketAnalysis.Analysis.ISetOperationsPerformer
  commentId: T:MarketBasketAnalysis.Analysis.ISetOperationsPerformer
  id: ISetOperationsPerformer
  parent: MarketBasketAnalysis.Analysis
  children:
  - MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Except(System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Boolean)
  - MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Intersect(System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Boolean)
  langs:
  - csharp
  - vb
  name: ISetOperationsPerformer
  nameWithType: ISetOperationsPerformer
  fullName: MarketBasketAnalysis.Analysis.ISetOperationsPerformer
  type: Interface
  source:
    remote:
      path: src/MarketBasketAnalysis/Analysis/ISetOperationsPerformer.cs
      branch: main
      repo: https://github.com/vladimir-makeev/MarketBasketAnalysis
    id: ISetOperationsPerformer
    path: src/MarketBasketAnalysis/Analysis/ISetOperationsPerformer.cs
    startLine: 9
  assemblies:
  - MarketBasketAnalysis
  namespace: MarketBasketAnalysis.Analysis
  summary: Defines an interface for performing set operations on collections of association rules.
  example: []
  syntax:
    content: public interface ISetOperationsPerformer
    content.vb: Public Interface ISetOperationsPerformer
- uid: MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Intersect(System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Boolean)
  commentId: M:MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Intersect(System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Boolean)
  id: Intersect(System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Boolean)
  parent: MarketBasketAnalysis.Analysis.ISetOperationsPerformer
  langs:
  - csharp
  - vb
  name: Intersect(IReadOnlyCollection<AssociationRule>, IReadOnlyCollection<AssociationRule>, bool)
  nameWithType: ISetOperationsPerformer.Intersect(IReadOnlyCollection<AssociationRule>, IReadOnlyCollection<AssociationRule>, bool)
  fullName: MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Intersect(System.Collections.Generic.IReadOnlyCollection<MarketBasketAnalysis.AssociationRule>, System.Collections.Generic.IReadOnlyCollection<MarketBasketAnalysis.AssociationRule>, bool)
  type: Method
  source:
    remote:
      path: src/MarketBasketAnalysis/Analysis/ISetOperationsPerformer.cs
      branch: main
      repo: https://github.com/vladimir-makeev/MarketBasketAnalysis
    id: Intersect
    path: src/MarketBasketAnalysis/Analysis/ISetOperationsPerformer.cs
    startLine: 29
  assemblies:
  - MarketBasketAnalysis
  namespace: MarketBasketAnalysis.Analysis
  summary: Computes the intersection of two collections of association rules.
  example: []
  syntax:
    content: IReadOnlyCollection<AssociationRule> Intersect(IReadOnlyCollection<AssociationRule> first, IReadOnlyCollection<AssociationRule> second, bool ignoreLinkDirection = false)
    parameters:
    - id: first
      type: System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule}
      description: The first collection of association rules.
    - id: second
      type: System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule}
      description: The second collection of association rules.
    - id: ignoreLinkDirection
      type: System.Boolean
      description: >-
        A value indicating whether the direction of links between association rules should be ignored.

        If <code>true</code>, the intersection will consider rules as equal regardless of their direction.
    return:
      type: System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule}
      description: A collection of association rules that are present in both <code class="paramref">first</code> and <code class="paramref">second</code>.
    content.vb: Function Intersect(first As IReadOnlyCollection(Of AssociationRule), second As IReadOnlyCollection(Of AssociationRule), ignoreLinkDirection As Boolean = False) As IReadOnlyCollection(Of AssociationRule)
  overload: MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Intersect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">first</code> or <code class="paramref">second</code> is <code>null</code>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">first</code> or <code class="paramref">second</code> contains <code>null</code> items.
  nameWithType.vb: ISetOperationsPerformer.Intersect(IReadOnlyCollection(Of AssociationRule), IReadOnlyCollection(Of AssociationRule), Boolean)
  fullName.vb: MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Intersect(System.Collections.Generic.IReadOnlyCollection(Of MarketBasketAnalysis.AssociationRule), System.Collections.Generic.IReadOnlyCollection(Of MarketBasketAnalysis.AssociationRule), Boolean)
  name.vb: Intersect(IReadOnlyCollection(Of AssociationRule), IReadOnlyCollection(Of AssociationRule), Boolean)
- uid: MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Except(System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Boolean)
  commentId: M:MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Except(System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Boolean)
  id: Except(System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule},System.Boolean)
  parent: MarketBasketAnalysis.Analysis.ISetOperationsPerformer
  langs:
  - csharp
  - vb
  name: Except(IReadOnlyCollection<AssociationRule>, IReadOnlyCollection<AssociationRule>, bool)
  nameWithType: ISetOperationsPerformer.Except(IReadOnlyCollection<AssociationRule>, IReadOnlyCollection<AssociationRule>, bool)
  fullName: MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Except(System.Collections.Generic.IReadOnlyCollection<MarketBasketAnalysis.AssociationRule>, System.Collections.Generic.IReadOnlyCollection<MarketBasketAnalysis.AssociationRule>, bool)
  type: Method
  source:
    remote:
      path: src/MarketBasketAnalysis/Analysis/ISetOperationsPerformer.cs
      branch: main
      repo: https://github.com/vladimir-makeev/MarketBasketAnalysis
    id: Except
    path: src/MarketBasketAnalysis/Analysis/ISetOperationsPerformer.cs
    startLine: 50
  assemblies:
  - MarketBasketAnalysis
  namespace: MarketBasketAnalysis.Analysis
  summary: Computes the difference between two collections of association rules.
  example: []
  syntax:
    content: IReadOnlyCollection<AssociationRule> Except(IReadOnlyCollection<AssociationRule> first, IReadOnlyCollection<AssociationRule> second, bool ignoreLinkDirection = false)
    parameters:
    - id: first
      type: System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule}
      description: The first collection of association rules.
    - id: second
      type: System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule}
      description: The second collection of association rules.
    - id: ignoreLinkDirection
      type: System.Boolean
      description: >-
        A value indicating whether the direction of links between association rules should be ignored.

        If <code>true</code>, the difference will consider rules as equal regardless of their direction.
    return:
      type: System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule}
      description: A collection of association rules that are present in <code class="paramref">first</code> but not in <code class="paramref">second</code>.
    content.vb: Function Except(first As IReadOnlyCollection(Of AssociationRule), second As IReadOnlyCollection(Of AssociationRule), ignoreLinkDirection As Boolean = False) As IReadOnlyCollection(Of AssociationRule)
  overload: MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Except*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">first</code> or <code class="paramref">second</code> is <code>null</code>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">first</code> or <code class="paramref">second</code> contains <code>null</code> items.
  nameWithType.vb: ISetOperationsPerformer.Except(IReadOnlyCollection(Of AssociationRule), IReadOnlyCollection(Of AssociationRule), Boolean)
  fullName.vb: MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Except(System.Collections.Generic.IReadOnlyCollection(Of MarketBasketAnalysis.AssociationRule), System.Collections.Generic.IReadOnlyCollection(Of MarketBasketAnalysis.AssociationRule), Boolean)
  name.vb: Except(IReadOnlyCollection(Of AssociationRule), IReadOnlyCollection(Of AssociationRule), Boolean)
references:
- uid: MarketBasketAnalysis.Analysis
  commentId: N:MarketBasketAnalysis.Analysis
  href: MarketBasketAnalysis.html
  name: MarketBasketAnalysis.Analysis
  nameWithType: MarketBasketAnalysis.Analysis
  fullName: MarketBasketAnalysis.Analysis
  spec.csharp:
  - uid: MarketBasketAnalysis
    name: MarketBasketAnalysis
    href: MarketBasketAnalysis.html
  - name: .
  - uid: MarketBasketAnalysis.Analysis
    name: Analysis
    href: MarketBasketAnalysis.Analysis.html
  spec.vb:
  - uid: MarketBasketAnalysis
    name: MarketBasketAnalysis
    href: MarketBasketAnalysis.html
  - name: .
  - uid: MarketBasketAnalysis.Analysis
    name: Analysis
    href: MarketBasketAnalysis.Analysis.html
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Intersect*
  commentId: Overload:MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Intersect
  href: MarketBasketAnalysis.Analysis.ISetOperationsPerformer.html#MarketBasketAnalysis_Analysis_ISetOperationsPerformer_Intersect_System_Collections_Generic_IReadOnlyCollection_MarketBasketAnalysis_AssociationRule__System_Collections_Generic_IReadOnlyCollection_MarketBasketAnalysis_AssociationRule__System_Boolean_
  name: Intersect
  nameWithType: ISetOperationsPerformer.Intersect
  fullName: MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Intersect
- uid: System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{MarketBasketAnalysis.AssociationRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<AssociationRule>
  nameWithType: IReadOnlyCollection<AssociationRule>
  fullName: System.Collections.Generic.IReadOnlyCollection<MarketBasketAnalysis.AssociationRule>
  nameWithType.vb: IReadOnlyCollection(Of AssociationRule)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of MarketBasketAnalysis.AssociationRule)
  name.vb: IReadOnlyCollection(Of AssociationRule)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: MarketBasketAnalysis.AssociationRule
    name: AssociationRule
    href: MarketBasketAnalysis.AssociationRule.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: MarketBasketAnalysis.AssociationRule
    name: AssociationRule
    href: MarketBasketAnalysis.AssociationRule.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Except*
  commentId: Overload:MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Except
  href: MarketBasketAnalysis.Analysis.ISetOperationsPerformer.html#MarketBasketAnalysis_Analysis_ISetOperationsPerformer_Except_System_Collections_Generic_IReadOnlyCollection_MarketBasketAnalysis_AssociationRule__System_Collections_Generic_IReadOnlyCollection_MarketBasketAnalysis_AssociationRule__System_Boolean_
  name: Except
  nameWithType: ISetOperationsPerformer.Except
  fullName: MarketBasketAnalysis.Analysis.ISetOperationsPerformer.Except
