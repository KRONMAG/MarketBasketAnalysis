### YamlMime:ManagedReference
items:
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule
  commentId: T:MarketBasketAnalysis.Mining.ItemExclusionRule
  id: ItemExclusionRule
  parent: MarketBasketAnalysis.Mining
  children:
  - MarketBasketAnalysis.Mining.ItemExclusionRule.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToGroups
  - MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToItems
  - MarketBasketAnalysis.Mining.ItemExclusionRule.ExactMatch
  - MarketBasketAnalysis.Mining.ItemExclusionRule.IgnoreCase
  - MarketBasketAnalysis.Mining.ItemExclusionRule.Pattern
  - MarketBasketAnalysis.Mining.ItemExclusionRule.ShouldExclude(MarketBasketAnalysis.Item)
  langs:
  - csharp
  - vb
  name: ItemExclusionRule
  nameWithType: ItemExclusionRule
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule
  type: Class
  source:
    remote:
      path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
      branch: main
      repo: https://github.com/vladimir-makeev/MarketBasketAnalysis
    id: ItemExclusionRule
    path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
    startLine: 8
  assemblies:
  - MarketBasketAnalysis
  namespace: MarketBasketAnalysis.Mining
  summary: Represents a rule for excluding items or groups from association rule mining.
  example: []
  syntax:
    content: public class ItemExclusionRule
    content.vb: Public Class ItemExclusionRule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule.Pattern
  commentId: P:MarketBasketAnalysis.Mining.ItemExclusionRule.Pattern
  id: Pattern
  parent: MarketBasketAnalysis.Mining.ItemExclusionRule
  langs:
  - csharp
  - vb
  name: Pattern
  nameWithType: ItemExclusionRule.Pattern
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule.Pattern
  type: Property
  source:
    remote:
      path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
      branch: main
      repo: https://github.com/vladimir-makeev/MarketBasketAnalysis
    id: Pattern
    path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
    startLine: 15
  assemblies:
  - MarketBasketAnalysis
  namespace: MarketBasketAnalysis.Mining
  summary: Gets the pattern used to match item names for exclusion.
  example: []
  syntax:
    content: public string Pattern { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Pattern As String
  overload: MarketBasketAnalysis.Mining.ItemExclusionRule.Pattern*
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule.ExactMatch
  commentId: P:MarketBasketAnalysis.Mining.ItemExclusionRule.ExactMatch
  id: ExactMatch
  parent: MarketBasketAnalysis.Mining.ItemExclusionRule
  langs:
  - csharp
  - vb
  name: ExactMatch
  nameWithType: ItemExclusionRule.ExactMatch
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule.ExactMatch
  type: Property
  source:
    remote:
      path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
      branch: main
      repo: https://github.com/vladimir-makeev/MarketBasketAnalysis
    id: ExactMatch
    path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
    startLine: 20
  assemblies:
  - MarketBasketAnalysis
  namespace: MarketBasketAnalysis.Mining
  summary: Gets a value indicating whether the exclusion rule requires an exact match of the item name.
  example: []
  syntax:
    content: public bool ExactMatch { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ExactMatch As Boolean
  overload: MarketBasketAnalysis.Mining.ItemExclusionRule.ExactMatch*
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule.IgnoreCase
  commentId: P:MarketBasketAnalysis.Mining.ItemExclusionRule.IgnoreCase
  id: IgnoreCase
  parent: MarketBasketAnalysis.Mining.ItemExclusionRule
  langs:
  - csharp
  - vb
  name: IgnoreCase
  nameWithType: ItemExclusionRule.IgnoreCase
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule.IgnoreCase
  type: Property
  source:
    remote:
      path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
      branch: main
      repo: https://github.com/vladimir-makeev/MarketBasketAnalysis
    id: IgnoreCase
    path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
    startLine: 25
  assemblies:
  - MarketBasketAnalysis
  namespace: MarketBasketAnalysis.Mining
  summary: Gets a value indicating whether the comparison should ignore case when matching item names.
  example: []
  syntax:
    content: public bool IgnoreCase { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IgnoreCase As Boolean
  overload: MarketBasketAnalysis.Mining.ItemExclusionRule.IgnoreCase*
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToItems
  commentId: P:MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToItems
  id: ApplyToItems
  parent: MarketBasketAnalysis.Mining.ItemExclusionRule
  langs:
  - csharp
  - vb
  name: ApplyToItems
  nameWithType: ItemExclusionRule.ApplyToItems
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToItems
  type: Property
  source:
    remote:
      path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
      branch: main
      repo: https://github.com/vladimir-makeev/MarketBasketAnalysis
    id: ApplyToItems
    path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
    startLine: 30
  assemblies:
  - MarketBasketAnalysis
  namespace: MarketBasketAnalysis.Mining
  summary: Gets a value indicating whether the rule applies to individual items.
  example: []
  syntax:
    content: public bool ApplyToItems { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ApplyToItems As Boolean
  overload: MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToItems*
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToGroups
  commentId: P:MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToGroups
  id: ApplyToGroups
  parent: MarketBasketAnalysis.Mining.ItemExclusionRule
  langs:
  - csharp
  - vb
  name: ApplyToGroups
  nameWithType: ItemExclusionRule.ApplyToGroups
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToGroups
  type: Property
  source:
    remote:
      path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
      branch: main
      repo: https://github.com/vladimir-makeev/MarketBasketAnalysis
    id: ApplyToGroups
    path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
    startLine: 35
  assemblies:
  - MarketBasketAnalysis
  namespace: MarketBasketAnalysis.Mining
  summary: Gets a value indicating whether the rule applies to groups of items.
  example: []
  syntax:
    content: public bool ApplyToGroups { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ApplyToGroups As Boolean
  overload: MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToGroups*
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:MarketBasketAnalysis.Mining.ItemExclusionRule.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)'
  parent: MarketBasketAnalysis.Mining.ItemExclusionRule
  langs:
  - csharp
  - vb
  name: ItemExclusionRule(string, bool, bool, bool, bool)
  nameWithType: ItemExclusionRule.ItemExclusionRule(string, bool, bool, bool, bool)
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule.ItemExclusionRule(string, bool, bool, bool, bool)
  type: Constructor
  source:
    remote:
      path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
      branch: main
      repo: https://github.com/vladimir-makeev/MarketBasketAnalysis
    id: .ctor
    path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
    startLine: 51
  assemblies:
  - MarketBasketAnalysis
  namespace: MarketBasketAnalysis.Mining
  summary: Initializes a new instance of the <xref href="MarketBasketAnalysis.Mining.ItemExclusionRule" data-throw-if-not-resolved="false"></xref> class with the specified parameters.
  example: []
  syntax:
    content: public ItemExclusionRule(string pattern, bool exactMatch, bool ignoreCase, bool applyToItems, bool applyToGroups)
    parameters:
    - id: pattern
      type: System.String
      description: The pattern used to match item names for exclusion.
    - id: exactMatch
      type: System.Boolean
      description: A value indicating whether the exclusion rule requires an exact match of the item name.
    - id: ignoreCase
      type: System.Boolean
      description: A value indicating whether the comparison should ignore case when matching item names.
    - id: applyToItems
      type: System.Boolean
      description: A value indicating whether the rule applies to individual items.
    - id: applyToGroups
      type: System.Boolean
      description: A value indicating whether the rule applies to groups of items.
    content.vb: Public Sub New(pattern As String, exactMatch As Boolean, ignoreCase As Boolean, applyToItems As Boolean, applyToGroups As Boolean)
  overload: MarketBasketAnalysis.Mining.ItemExclusionRule.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">pattern</code> is <code>null</code>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if both <code class="paramref">applyToItems</code> and <code class="paramref">applyToGroups</code> are <code>false</code>.
  nameWithType.vb: ItemExclusionRule.New(String, Boolean, Boolean, Boolean, Boolean)
  fullName.vb: MarketBasketAnalysis.Mining.ItemExclusionRule.New(String, Boolean, Boolean, Boolean, Boolean)
  name.vb: New(String, Boolean, Boolean, Boolean, Boolean)
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule.ShouldExclude(MarketBasketAnalysis.Item)
  commentId: M:MarketBasketAnalysis.Mining.ItemExclusionRule.ShouldExclude(MarketBasketAnalysis.Item)
  id: ShouldExclude(MarketBasketAnalysis.Item)
  parent: MarketBasketAnalysis.Mining.ItemExclusionRule
  langs:
  - csharp
  - vb
  name: ShouldExclude(Item)
  nameWithType: ItemExclusionRule.ShouldExclude(Item)
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule.ShouldExclude(MarketBasketAnalysis.Item)
  type: Method
  source:
    remote:
      path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
      branch: main
      repo: https://github.com/vladimir-makeev/MarketBasketAnalysis
    id: ShouldExclude
    path: src/MarketBasketAnalysis/Mining/ItemExclusionRule.cs
    startLine: 77
  assemblies:
  - MarketBasketAnalysis
  namespace: MarketBasketAnalysis.Mining
  summary: Determines whether the specified item should be excluded based on the rule.
  example: []
  syntax:
    content: public bool ShouldExclude(Item item)
    parameters:
    - id: item
      type: MarketBasketAnalysis.Item
      description: The <xref href="MarketBasketAnalysis.Item" data-throw-if-not-resolved="false"></xref> to evaluate.
    return:
      type: System.Boolean
      description: <code>true</code> if the item matches the exclusion rule and should be excluded; otherwise, <code>false</code>.
    content.vb: Public Function ShouldExclude(item As Item) As Boolean
  overload: MarketBasketAnalysis.Mining.ItemExclusionRule.ShouldExclude*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">item</code> is <code>null</code>.
references:
- uid: MarketBasketAnalysis.Mining
  commentId: N:MarketBasketAnalysis.Mining
  href: MarketBasketAnalysis.html
  name: MarketBasketAnalysis.Mining
  nameWithType: MarketBasketAnalysis.Mining
  fullName: MarketBasketAnalysis.Mining
  spec.csharp:
  - uid: MarketBasketAnalysis
    name: MarketBasketAnalysis
    href: MarketBasketAnalysis.html
  - name: .
  - uid: MarketBasketAnalysis.Mining
    name: Mining
    href: MarketBasketAnalysis.Mining.html
  spec.vb:
  - uid: MarketBasketAnalysis
    name: MarketBasketAnalysis
    href: MarketBasketAnalysis.html
  - name: .
  - uid: MarketBasketAnalysis.Mining
    name: Mining
    href: MarketBasketAnalysis.Mining.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule.Pattern*
  commentId: Overload:MarketBasketAnalysis.Mining.ItemExclusionRule.Pattern
  href: MarketBasketAnalysis.Mining.ItemExclusionRule.html#MarketBasketAnalysis_Mining_ItemExclusionRule_Pattern
  name: Pattern
  nameWithType: ItemExclusionRule.Pattern
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule.Pattern
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule.ExactMatch*
  commentId: Overload:MarketBasketAnalysis.Mining.ItemExclusionRule.ExactMatch
  href: MarketBasketAnalysis.Mining.ItemExclusionRule.html#MarketBasketAnalysis_Mining_ItemExclusionRule_ExactMatch
  name: ExactMatch
  nameWithType: ItemExclusionRule.ExactMatch
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule.ExactMatch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule.IgnoreCase*
  commentId: Overload:MarketBasketAnalysis.Mining.ItemExclusionRule.IgnoreCase
  href: MarketBasketAnalysis.Mining.ItemExclusionRule.html#MarketBasketAnalysis_Mining_ItemExclusionRule_IgnoreCase
  name: IgnoreCase
  nameWithType: ItemExclusionRule.IgnoreCase
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule.IgnoreCase
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToItems*
  commentId: Overload:MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToItems
  href: MarketBasketAnalysis.Mining.ItemExclusionRule.html#MarketBasketAnalysis_Mining_ItemExclusionRule_ApplyToItems
  name: ApplyToItems
  nameWithType: ItemExclusionRule.ApplyToItems
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToItems
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToGroups*
  commentId: Overload:MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToGroups
  href: MarketBasketAnalysis.Mining.ItemExclusionRule.html#MarketBasketAnalysis_Mining_ItemExclusionRule_ApplyToGroups
  name: ApplyToGroups
  nameWithType: ItemExclusionRule.ApplyToGroups
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule.ApplyToGroups
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule
  commentId: T:MarketBasketAnalysis.Mining.ItemExclusionRule
  href: MarketBasketAnalysis.Mining.ItemExclusionRule.html
  name: ItemExclusionRule
  nameWithType: ItemExclusionRule
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule.#ctor*
  commentId: Overload:MarketBasketAnalysis.Mining.ItemExclusionRule.#ctor
  href: MarketBasketAnalysis.Mining.ItemExclusionRule.html#MarketBasketAnalysis_Mining_ItemExclusionRule__ctor_System_String_System_Boolean_System_Boolean_System_Boolean_System_Boolean_
  name: ItemExclusionRule
  nameWithType: ItemExclusionRule.ItemExclusionRule
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule.ItemExclusionRule
  nameWithType.vb: ItemExclusionRule.New
  fullName.vb: MarketBasketAnalysis.Mining.ItemExclusionRule.New
  name.vb: New
- uid: MarketBasketAnalysis.Item
  commentId: T:MarketBasketAnalysis.Item
  parent: MarketBasketAnalysis
  href: MarketBasketAnalysis.Item.html
  name: Item
  nameWithType: Item
  fullName: MarketBasketAnalysis.Item
- uid: MarketBasketAnalysis.Mining.ItemExclusionRule.ShouldExclude*
  commentId: Overload:MarketBasketAnalysis.Mining.ItemExclusionRule.ShouldExclude
  href: MarketBasketAnalysis.Mining.ItemExclusionRule.html#MarketBasketAnalysis_Mining_ItemExclusionRule_ShouldExclude_MarketBasketAnalysis_Item_
  name: ShouldExclude
  nameWithType: ItemExclusionRule.ShouldExclude
  fullName: MarketBasketAnalysis.Mining.ItemExclusionRule.ShouldExclude
- uid: MarketBasketAnalysis
  commentId: N:MarketBasketAnalysis
  href: MarketBasketAnalysis.html
  name: MarketBasketAnalysis
  nameWithType: MarketBasketAnalysis
  fullName: MarketBasketAnalysis
